<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d">

    <Style x:Key="BaseStyle" TargetType="Control">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource PopupBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PopupBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource PopupBorderThickness}" />
    </Style>

    <Style x:Key="DuplicateHider_ContentControlStyle" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <!--
                            DataContext has an ObservableCollection called Games
                            containing all copys of the Game in the current context (inlcuding itself).
                            Each entry is of Type
                            ListData {
                                Playnite.SDK.Models.Game Game;
                                Boolean IsCurrent;  // True if this copy eqal to the current GameContext property.
                                BitmapImage Icon;   // Source Icon
                                String SourceName;  // Source name. Use this rather than Game.Source.Name, 
                                                    // because Source might be null.
                                ICommand LaunchCommand;
                                ICommand SelectCommand;
                                ICommand InstallCommand;
                                ICommand UninstallCommand;
                            }
                        -->
                        <ItemsControl
                            x:Name="DH_ListBox"
                            Focusable="False"
                            IsTextSearchEnabled="False"
                            ItemsSource="{Binding Games}"
                            VirtualizingPanel.VirtualizationMode="Recycling">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="0,3,0,0">
                                        <!--  StackPanel containing icon and source name of a game.  -->
                                        <StackPanel
                                            x:Name="_Item"
                                            Background="Transparent"
                                            Orientation="Horizontal">
                                            <Image
                                                MaxHeight="20"
                                                Margin="5,0,5,0"
                                                VerticalAlignment="Center"
                                                DockPanel.Dock="Left"
                                                RenderOptions.BitmapScalingMode="Fant"
                                                Source="{Binding Icon}" />
                                            <TextBlock
                                                x:Name="_SourceText"
                                                Margin="5,0,5,0"
                                                VerticalAlignment="Center"
                                                Foreground="White"
                                                Text="{Binding SourceName}" />
                                            <!--  Binding gestures to commands.  -->
                                            <StackPanel.InputBindings>
                                                <MouseBinding Command="{Binding LaunchCommand}" Gesture="LeftDoubleClick" />
                                                <MouseBinding Command="{Binding SelectCommand}" Gesture="LeftClick" />
                                            </StackPanel.InputBindings>
                                        </StackPanel>
                                        <!--  Rectangle used to indicate the currently selected copy.  -->
                                        <Rectangle
                                            x:Name="_Rect"
                                            Height="2"
                                            Margin="0,3,0,0"
                                            VerticalAlignment="Bottom"
                                            RenderTransformOrigin="0.5,0"
                                            Visibility="Visible">
                                            <Rectangle.Fill>
                                                <SolidColorBrush Color="{StaticResource GlyphColor}" />
                                            </Rectangle.Fill>
                                            <Rectangle.RenderTransform>
                                                <ScaleTransform x:Name="_RectScale" ScaleX="{Binding IsCurrent}" />
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                    </StackPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding DataContext.SwitchedGroup, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False">
                                            <Setter Property="RenderTransform" TargetName="_Rect">
                                                <Setter.Value>
                                                    <ScaleTransform ScaleX="0" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <!--  Animation for the selection bar below the selected item.  -->
                                        <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="_RectScale"
                                                            Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                            To="1"
                                                            Duration="0:0:0.2">
                                                            <DoubleAnimation.EasingFunction>
                                                                <CubicEase />
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="_RectScale"
                                                            Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                            To="0"
                                                            Duration="0:0:0.2">
                                                            <DoubleAnimation.EasingFunction>
                                                                <CubicEase />
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <!--  MouseOver glow effect.  -->
                                            <Setter TargetName="_Item" Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect
                                                        BlurRadius="10"
                                                        Opacity="1"
                                                        ShadowDepth="0"
                                                        Color="White" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <!--  Make items for unisntalled games slightly transparent.  -->
                                        <DataTrigger Binding="{Binding Game.IsInstalled}" Value="False">
                                            <Setter TargetName="_Item" Property="Opacity" Value="0.5" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DuplicateHider_ContentControlStyleSimple" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <!--
                        DataContext has an ObservableCollection called Games
                        containing all copys of the Game in the current context (inlcuding itself).
                        Each entry is of Type
                        ListData {
                            Playnite.SDK.Models.Game Game;
                            Boolean IsCurrent;  // True if this copy eqal to the current GameContext property.
                            BitmapImage Icon;   // Source Icon
                            String SourceName;  // Source name. Use this rather than Game.Source.Name, 
                                                // because Source might be null.
                            ICommand LaunchCommand;
                            ICommand SelectCommand;
                            ICommand InstallCommand;
                            ICommand UninstallCommand;
                        }
                    -->
                    <ItemsControl
                        x:Name="DH_ListBox"
                        Focusable="False"
                        IsTextSearchEnabled="False"
                        ItemsSource="{Binding Games}"
                        VirtualizingPanel.VirtualizationMode="Recycling"
                        BorderBrush="{DynamicResource NormalBorderBrush}" 
                        BorderThickness="{DynamicResource ControlBorderThickness}"
                        Background="{DynamicResource ButtonBackgroundBrush}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel>
                                </StackPanel>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <!--  StackPanel containing icon and source name of a game.  -->
                                <StackPanel Background="{StaticResource ControlBackgroundBrush}" Margin="5,5,5,5"
                                        x:Name="_Item"
                                        Orientation="Horizontal">
                                    <Image
                                            MaxHeight="20"
                                            Margin="5,0,5,0"
                                            VerticalAlignment="Center"
                                            DockPanel.Dock="Left"
                                            RenderOptions.BitmapScalingMode="Fant"
                                            Source="{Binding Icon}" />
                                    <TextBlock
                                            x:Name="_SourceText"
                                            Margin="5,0,5,0"
                                            VerticalAlignment="Center"
                                            Foreground="White"
                                            Background="{x:Null}"
                                            Text="{Binding SourceName}" />
                                    <!--  Binding gestures to commands.  -->
                                    <StackPanel.InputBindings>
                                        <MouseBinding Command="{Binding LaunchCommand}" Gesture="LeftDoubleClick" />
                                        <MouseBinding Command="{Binding SelectCommand}" Gesture="LeftClick" />
                                    </StackPanel.InputBindings>
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <!--  MouseOver glow effect.  -->
                                        <Setter TargetName="_Item" Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect
                                                    BlurRadius="10"
                                                    Opacity="1"
                                                    ShadowDepth="0"
                                                    Color="White" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                <!--  Make items for unisntalled games slightly transparent.  -->
                                <DataTrigger Binding="{Binding Game.IsInstalled}" Value="False">
                                    <Setter TargetName="_Item" Property="Opacity" Value="0.5" />
                                </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="DuplicateHider_IconContentControlStyle1"
        BasedOn="{StaticResource {x:Type ContentControl}}"
        TargetType="ContentControl">
        <Style.Resources>
            <DropShadowEffect
                x:Key="glowEffect"
                BlurRadius="8"
                Opacity="1"
                RenderingBias="Quality"
                ShadowDepth="0"
                Color="White" />
        </Style.Resources>
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{x:Null}" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="Margin" Value="2,0,2,0" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="{Binding Icon}" RenderOptions.BitmapScalingMode="Fant"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" Value="{StaticResource glowEffect}" />
            </Trigger>
            <DataTrigger Binding="{Binding Game.IsInstalled}"  Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DuplicateHider_IconStackPanelStyle1" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="DuplicateHider_PlayButtonExt" TargetType="{x:Type ContentControl}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Vertical" Visibility="{Binding MoreThanOneCopy, Converter={StaticResource BooleanToVisibilityConverter}}" Width="38">
                        <Border Background="{DynamicResource WindowBackgourndBrushLight}" x:Name="ButtonBorder"
                                BorderThickness="{DynamicResource ControlBorderThickness}" CornerRadius="0,5,5,0" Margin="-5,0,0,0" Width="38">
                            <ToggleButton 
                                x:Name="Toggler" 
                                Style="{DynamicResource ExpanderDownHeaderStyle}" 
                                Height="40" Width="30" BorderThickness="{DynamicResource ControlBorderThickness}"
                                Background="Transparent"
                                HorizontalContentAlignment="Right"
                                >
                            </ToggleButton>
                        </Border>
                        <Popup x:Name="PlayOptions" Width="Auto"
                               IsOpen="{Binding IsChecked, ElementName=Toggler, Delay=150}"
                               Placement="Bottom" PlacementTarget="{Binding ElementName=ButtonBorder}"
                               HorizontalOffset="-147.5"
                               Effect="{DynamicResource DefaultDropShadow}"
                               Margin="{DynamicResource DropShadowThickness}"
                               AllowsTransparency="True"
                               StaysOpen="False"
                                >

                            <Border Background="{DynamicResource ButtonOpaqueBrush}"
                                    Effect="{DynamicResource DefaultDropShadow}"
                                    Margin="{DynamicResource DropShadowThickness}" 
                                    CornerRadius="0,0,5,5"
                                    MinWidth="185"
                                    MaxWidth="370"
                                    x:Name="Background">
                                <ScrollViewer MaxHeight="216" 
                                              HorizontalScrollBarVisibility="Disabled" 
                                              x:Name="ScrollViewer" 
                                              VerticalScrollBarVisibility="Auto">
                                    <ItemsControl
                                        HorizontalContentAlignment="Left"
                                        x:Name="DH_ListBox"
                                        Focusable="False"
                                        IsTextSearchEnabled="False"
                                        ItemsSource="{Binding Games}"
                                        BorderBrush="{DynamicResource NormalBorderBrush}" 
                                        BorderThickness="{DynamicResource ControlBorderThickness}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <!--  StackPanel containing icon and source name of a game.  -->
                                                <Grid Background="Transparent" x:Name="_Item" HorizontalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border x:Name="SelectionBorder" 
                                                            OpacityMask="{DynamicResource LeftFadingBrush}"
                                                            CornerRadius="5" Grid.ColumnSpan="2"/>
                                                    <Image
                                                        Height="20"
                                                        Width="20"
                                                        Margin="5,8,5,8"
                                                        RenderOptions.BitmapScalingMode="Fant"
                                                        Source="{Binding Icon}" 
                                                        x:Name="_IconImage"
                                                        Stretch="Uniform"
                                                        Grid.Column="0"
                                                    />
                                                    <TextBlock
                                                    Grid.Column="1"
                                                    x:Name="_SourceText"
                                                    Padding="3,8,5,8"
                                                    VerticalAlignment="Center"
                                                    Foreground="{DynamicResource TextBrush}"
                                                    Background="{x:Null}"
                                                    Text="{Binding DisplayString}" 
                                                    TextTrimming="CharacterEllipsis"
                                                    />
                                                    <!--  Binding gestures to commands.  -->
                                                    <Grid.InputBindings>
                                                        <MouseBinding Command="{Binding LaunchCommand}" Gesture="LeftClick" />
                                                    </Grid.InputBindings>
                                                </Grid>
                                                <DataTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <!--  MouseOver glow effect.  -->
                                                        <Setter TargetName="SelectionBorder" 
                                                                Property="Background" 
                                                                Value="{DynamicResource WindowBackgourndBrushHighlight}"/>
                                                    </Trigger>
                                                    <!--  Make items for unisntalled games slightly transparent.  -->
                                                    <DataTrigger Binding="{Binding Game.IsInstalled}" Value="False">
                                                        <Setter TargetName="_IconImage" Property="Opacity" Value="0.5" />
                                                        <Setter TargetName="_SourceText" Property="Opacity" Value="0.5" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonBorder">
                            <Setter Property="Background" TargetName="ButtonBorder" Value="{DynamicResource WindowBackgourndBrushBright}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>